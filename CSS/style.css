@import url('https://fonts.googleapis.com/css2?family=Lato:wght@400;700;900&display=swap');

/*REFAZER ISSO, TENHO QUE APRENDER!*/
*{
    margin: 0;
    padding: 0;
    box-sizing: border-box;
    font-family: 'Lato', sans-serif;
}

body{
    width: 100vw;
    height: 100vh;
    display: flex;
    flex-direction: column;
    background-color: #ddd;
    align-items: center;
    justify-content: center;
}

body h1{
    text-align: center;
    padding-bottom: 2rem;
    font-weight: 900;
}

.container{
    width: 90%;
    height: 80%;
    background-color: #fff;
    border-radius: 8px;
}

.header{
    display: flex;
    /*
    o min=height deu esse espaçamento pra cima e pra baixo
    como se fosse margin
    */
    min-height: 70px;
    align-items: center;
    /*
    o space between deixou o botão lá pro final e o título
    no início do container
    */
    justify-content: space-between;
    margin: auto 12px;
}

.header h2{
    font-weight: 900
}

button{
    cursor: pointer;
}

#cria-equipe{
    background-color: #00cc00;
    color: #fff;
    padding: 12px;
    border-radius: 8px;
    border: none;
    font-weight: 700;
    font-size: 16px;
}

.tabela{
    padding: 10px;
    /*
    width: auto é para a responsividade, ele fica da largura
    do container que o contém
    */
    width: auto;
    /*
    height: inherit deixa o elemento do tamanho do container
    que o contém
    */
    height: inherit;

    /*
    overflow é usado quando um texto/conteúdo será maior que
    seu container, então ele cria um scroll para poder
    navegar nesse conteúdo
    */
    overflow: auto;
}

.tabela::-webkit-scrollbar{
    width: 12px;
    background-color: #eee;
}

.tabela::-webkit-scrollbar-thumb{
    border-radius: 10px;
    background-color: #999;
}

table{
    width: 100%;
    /*
    Tipo um padding, mas é melhor para trabalhar a distância
    para a borda
    */
    border-spacing: 10px;
    
    /*
    quebra a linha caso o texto vá exceder o limite do container
    */
    word-break: break-all;

    /*
    Tira o espaço entre a borda e os elementos da tabela,
    deixando tudo "único" em cada quadradinho
    */
    border-collapse: collapse;
}

thead{
    background-color: #ddd;
}

tr{
    /*
    O important só garante que essa propriedade vai sobrescrever
    qualquer outra definição anterior
    */
    border-bottom: 1px solid #ddd!important;
}

tbody tr td{
    vertical-align: text-top;
    padding: 6px;
    max-width: 50px;
}

thead tr th{
    padding: 5px;
    text-align: start;
    font-weight: 900;
}

tbody tr{
    margin-bottom: 50px;
}

/*
Deixa o edit e exclude separados no final
*/
thead tr th.acao{
    width: 100px!important;
    text-align: center;
}

tbody tr td.acao{
    text-align: center;
}

/*Responsividade*/
@media (max-width: 700px) {
    body{
      font-size: 10px;
    }
    
    .header span{
      font-size: 15px;
    }
  
    #cria-equipe{
      padding: 5px;
      font-size: 10px;
    }
  
    thead tr th.acao{
      width: auto!important;
    }
    
    td button i{
      font-size: 20px!important;
    }
  
    td button i:first-child{
      margin-right: 0;
    }
  
    .modal-equipe{
      width: 70%!important;
    }
  
    .modal label{
      font-size: 12px!important;
    }
}

.container-modal{
    width: 100vw;
    height: 100vh;
    background-color: rgba(0, 0, 0, 0.5);

    /*
    Essas três propriedades fazem o modal sobrepor toda
    a tela
    */
    position: fixed;
    top: 0;
    left: 0;
    
    /*
    Essa propriedade especifica a ordem de um elemento.
    Quanto maior o valor, mais à frente o elemento vai estar.
    Neste caso, queremos garantir que o modal fique na frente
    de tudo, por isso o 999
    */
    z-index: 999;
    align-items: center;
    justify-content: center;
    display: none;
}

.modal-equipe{
    display: flex;
    flex-direction: column;
    align-items: center;
    padding: 40px;
    background-color: #fff;
    border-radius: 10px;
    width: 40%;
}

.modal-equipe label{
    font-size: 14px;
    width: 100%;
    font-weight: bold;
}

.modal-equipe form input{
    /*o width já fez o trabalho do flex-direction*/
    width: 100%;
    outline: none;
    /*Aumenta o tamanho interno*/
    padding: 5px 10px;
    margin-bottom: 20px;
    /*
    Tirando as bordas de cima, esquerda e direta ficou
    parecendo que tem um padding entre o nome (label) e
    o input
    */
    border-top: none;
    border-left: none;
    border-right: none;
}

.modal-equipe button{
    width: 50%;
    padding: 7px 10px;
    margin: 10px 25%;
    outline: none;
    border-radius: 20px;
    border: none;
    color: #fff;
    background-color: #009900;
}

.modal-equipe .based{
    display: flex;
    flex-direction: row;
    justify-content: space-between;
}

.modal-equipe .based #team-city, #team-country{
    width: 40%;
}

.active{
    display: flex;
}

/*
o atributo animation é utilizado junto
ao keyframe, com o primeiro valor sendo o
nome do keyframe de animação
*/
.active .modal-equipe{
    animation: modal-equipe .4s;
}

@keyframes modal-equipe{
    from{
        opacity: 0;
        transform: translate3d(0, -60px, 0);
    }
    to{
        opacity: 1;
        transform: translate3d(0, 0, 0);
    }
}

td button {
    border: none;
    outline: none;
    background: transparent;
}
  
td button i {
    font-size: 25px;
}
  
td button i:first-child {
    margin-right: 10px;
}